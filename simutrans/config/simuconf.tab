# simuconf.tab
#
# Low-Level values and constants
#
# Lines starting with '#' or any non_character letter will be ignored!
# To actually set a value, remove the leading '#'!
#
# This file can be found in many places:
#
# simutrans/config/simuconf.tab (this one)
# ~/simutrans/simuconf.tab (in the user directory, if singleuser_install == 0 or not present, first only pak-file path will be read)
# simutrans/pakfilefolder/config/simuconf.tab
# ~/simutrans/simuconf.tab (readed a second time, s.a.)
#
################################# Base settings ##################################
#
# This simuconf.tab will be read first => we set meaningful defaults here.
#
# load/save the files in the users or the program directory directory? (default: 0 = user directory)
# ATTENTION!
# will be only used if this file is located in the program directory at config/simuconf.tab!
singleuser_install = 1
#
#
#
# Do not delete these comment line! (Needed for installer)

# Default pak file path
# which graphics you want to play?
# Nothing means automatic selection
# ATTENTION!
# This will be only used if this file is located in the program directory at config/simuconf.tab!
# and will be overwritten by the settings from simutrans/simuconf.tab in the user directory
#
#pak_file_path = pak/
#pak_file_path = pak.german/
#pak_file_path = pak128/
#pak_file_path = pak.japan/
#pak_file_path = pak.winter/
#pak_file_path = pak.ttd/

# The maximum number of position tested during a way search
# Consumes 16*x Bytes main memory, where x is the "max_route_steps" value.
max_route_steps = 1500000

# How many tiles to check before giving up on finding a free bay at a stop or free alternative route? 
# Default: 200
# Unlimited: 0
max_choose_route_steps = 0

# size of catchment area of a station (default 2)
# older game size was 3
# savegames with another catch area will give strange results
station_coverage = 16

# Max number of steps in goods pathfinding
# This should be equal or greater than the biggest group
# of interconnected stations in your game.
#
# If you set it too low, some goods might not find a route
# if the route is too complex. If you set it too high, the
# search will take a lot of CPU power, particularly if searches
# often fail because there is no route.
#
# Depending on your CPU power, you might want to limit the search
# depth.
#
# prissi: On a 512x512 map with more than 150000 people daily, the saturation
# value for "no route" was higher, around 8000. Using 300 instead almost doubled
# the value of "no route"
#
max_hops = 2000

# Passengers and goods will change vehicles at most "max_transfer"
# times to reach their destination.
#
# It seems that in good networks, the number of transfers is below
# 5. I think 6 is a good compromise that allows complex networks but
# cuts off the more extreme cases
#
# You can set this lower to save a little bit of CPU time, but at some
# point this means you'll get less passengers to transport
#
# This value is less critical than "max_hops" from above.
#
# T. Kubes: I would say 8 for now, but this definitely should be difficulty
# dependent setting.
#
max_transfers = 12

# way builder internal weights (defaults)
# a higher weight make it more unlikely
# make the curves negative, and the waybuilder will built strange tracks ...
#
way_straight=1
way_curve=2
way_double_curve=6
way_90_curve=15
way_slope=10
way_tunnel=8
way_max_bridge_len=15
way_leaving_road=25

# These settings are used to calculate adjusted figures based on the length of the month. 
# To assume a base month length based on the settings in Simutrans-Standard, use 1,000
# base_meters_per_tile and 18 base_bits_per_month.
# 
# To assume a base month length of 24 hours (to allow various settings to be calibrated
# as if months were days), use a base meters per tile of 7500
base_meters_per_tile = 1000
base_bits_per_month = 18

# This setting determines the rate at which jobs replenish. At the default, 100, all
# of a building's jobs replenish in exactly 1 month. At 200, it takes 2 months, and at
# 50, it takes 1/2 a month. This is useful when calibrating the month/year scale as
# against the hour/minute scale. If a month is timed as 6.4 hours (6:24), for example,
# a day (24 hours) consists of 3.75 "months". For jobs to replenish once every 24 hours,
# therefore, set this to 375 if the length of a month is 6:24.
job_replenishment_per_hundredths_of_months = 100

# Save the current game when quitting and reload it upon reopening
reload_and_save_on_quit = 1

############################### Passenger and mail settings ##############################
# also pak dependent

# town growth multiplier factors 
# The greater the factor, the greater the exent to which the thing to which the factor
# makes reference influences growth
passenger_multiplier = 40
mail_multiplier = 15
goods_multiplier = 20
electricity_multiplier = 20

# town growth is size dependent. There are three different sizes (<1000, 1000-10000, >10000)
# the idea is, that area increase by square but growth is linear
growthfactor_villages = 400
growthfactor_cities = 200
growthfactor_capitals = 100

# Enable this to use the old algorithm for city growth from Standard.
# NOTE: The renovation_percentage in cityrules.tab should be increased if this be done.
quick_city_growth = 0

# if enabled (default = 0 off) stops may have different capacities for passengers, mail, and  freight
seperate_halt_capacities = 0

# three modes (default = 0)
# 1: the payment is only relative to the distance to next interchange, 2 to the trips destination (default 0 is distance since last stop)
pay_for_total_distance = 0

# things to overcrowded destinations won't load if active (default off)
avoid_overcrowding = 0

# do not create goods/passenger/mail when the only route is over an overcrowded stop
no_routing_over_overcrowded = 0

# These settings determine the population, visitor demand, jobs and mail per "level" of building.
# Each of these things can be set independently in the buildings' .dat files, but for older paksets
# or paksets from Standard, only a "level" will be supplied, so these conversion factors are
# important in those cases.
population_per_level = 3
visitor_demand_per_level = 3
jobs_per_level = 2
mail_per_level = 1

# These settings determine the number of passenger trips that each person makes per game month
# and the number of items of mail that each unit of mail demand produces per month, in 1/100ths.
# This does *not* include onward and return trips, however, and is *before* adjustment for the
# meters per tile and bits per month scales.
passenger_trips_per_month_hundredths = 200
mail_packets_per_month_hundredths = 10

# This setting determines the maximum number of onward trips that passengers may make on a journey.
# The actual number of onward trips for any given packet of passengers is a random number of anywhere
# between 1 and this figure. This is only applicable if passengers are in fact going to make an onward
# trip, the chance of which is determined by a different setting (see below).
max_onward_trips = 3

# This figure determines how likely that it is that passengers will make any onward trips at all. It
# is expressed in percentage terms.
onward_trip_chance_percent = 25

# This is the chance, in percentage, that any given passenger journey will be a commuting trip. Any
# trip that is not a commuting trip is classed as a visiting trip.
commuting_trip_chance_percent = 67

# The following settings determine the way in which individual packets of passengers decide
# what their actual journey time tolerance is, within the above ranges. The options are:
#
# 0 - Even distribution
# Every point between the minimum and maximum is equally likely to be selected
#
# 1 - Normal distribution (http://en.wikipedia.org/wiki/Normal_distribution)
# Points nearer the middle of the range between minimum and maximum are more likely 
# to be selected than points nearer the end of the ranges.
#
# 2 - Positively skewed normal distribution (squared) (http://en.wikipedia.org/wiki/Skewness)
# Points nearer the a point in the range that is not the middle but is nearer to the lower
# end of the range are more likely to be selected. The distance from the middle is the skew.
#
# 3 - Positively skewed normal distribution (cubed)
# As with no. 2, but the degree of skewness (the extent to which the modal point in the range
# is nearer the beginning than the end) is considerably greater.
#
# 4 - Positively skewed normal distribution (squared recursive)
# As with nos. 2 and 3 with an even greater degree of skew.
#
# 5 - Positively skewed normal distribution (cubed recursive)
# As with nos. 2, 3 and 4 with a still greater degree of skew.
#
# 6 and over - Positively skewed normal distribution (cubed multiple recursive)
# As with nos. 2, 3, 4, and 5 with an ever more extreme degree of skew. Use with caution.

random_mode_commuting = 2
random_mode_visiting = 2

################################## Industry settings #################################

# when a city reaches 2^n times of this number
# then a factory is extended, or a new factory chain is spawned
#industry_increase_every = 2000

# smallest distance between two adjacent factories
min_factory_spacing = 6

# max distance for connected factories
# if percentage>0, it will be in percent of the largest map dimension
# percentage also overrides the absolute value
max_factory_spacing_percentage = 25
#max_factory_spacing = 40

# allow all possible supplier to connect to your factories?
# best to leave it in default position. (only on for simuTTD)
crossconnect_factories = 0

# how big is the chance for crossconnections in percent
# (100% will give nearly the same results as crossconnect_factories=1)
crossconnect_factories_percentage = 33

# how much is the total electric power available (in relation to total production) in parts per thousand
electric_promille = 1100

# true if transformers are allowed underground (default)
allow_underground_transformers = 1

# with this switch on (default), overcrowded factories will not recieve goods any more
just_in_time = 1

# How much amount in transport is sent before further distribution stops
# This is only enabled when "just_in_time" is enabled
# The limit is given in percent of factory storage (0=off)
#
# This number is (as of Simutrans-Experimental 11.16) scaled to the ratio
# of the time that it takes the industry to consume its stock to the average
# lead time for new deliveries. Values of slightly over 100% are recommended.
maximum_intransit_percentage = 110

# use beginner mode for new maps (can be switched anyway on the new map dialog)
first_beginner = 0

# number of periods for averaging the amount of arrived pax/mail at factories for boost calculation
# one period represents a fixed interval of 2^18 ms in-game time
# value can range from 1 to 16, inclusive; 1 means no averaging; default is 4
factory_arrival_periods = 4

# whether factory's pax/mail demands are enforced or not; default is on
factory_enforce_demand = 1

################################# Display settings ################################

# if defined, the default tool will try to calculate straight ways (like OpenTTD)
straight_way_without_control = 0

# player color can be fixed for several players or set totally random
# in the latter case each player will get unique but random coloring
# (default 0)
random_player_colors = 0

# when set here, the player will always get these player colors, even
# if random colors were enabled.
# color values range from 0 to 27 for first and second player color
# and there are 0...15 player in the game
player_color[1] = 1,4

# remove companies without convois after x month (0=off, 6=default)
remove_dummy_player_months = 6

# remove password of abandoned companies (wihtout any building activity) after x month (0=off default)
unprotect_abondoned_player_months = 0

# how long is a diagonal (512: faktor 2=1024/512, old way, 724: sqrt(2)=1024/724
# THIS WILL BE ONLY USED, WHEN THIS FILE IS IN THE pakxyz/config!
#diagonal_multiplier = 724

# how height is a tile in z-direction (default 16, TTD 8)
# THIS WILL BE ONLY USED, WHEN THIS FILE IS IN THE pakxyz/config!
#tile_height = 16

# (=1) drive on the left side of the road
drive_left = 0

# (=1) signals on the left side
signals_on_left = 0

# Do you want to have random pedestrians in town? Look nice but needs some
# CPU time to process them. (1=on, 0=off)
# Impact on frame time: ~10% (16 cities on a new standard map)
random_pedestrians = 1

# Do you want to have random pedestrians after pax are reaching this
# destination? May generate quite a lot. (1=on, 0=off)
stop_pedestrians = 1

# there are some other grounds (like rocky, lakes etc. )
# which could be added to the map (default 10)
# show random objects to break uniformity (every n suited tiles)
random_grounds_probability = 10

# show random moving animals (n = every n suited tiles, default 1000)
random_wildlife_probability = 1000

# animate the water each intervall (if images available)
# costs some time for the additional redraw (~1-3%)
water_animation_ms = 250

# Show info windows for private cars and pedestrians?
# (1=on, 0=off)
pedes_and_car_info = 0

# How much citycars will be generated
citycar_level = 5

# After how many month a citycar breaks (and will be forever gone) ...
# default is ten years
default_citycar_life = 36

# Show infos on trees?
# (1=on, 0=off)
tree_info = 1

# Show infos also on bare ground?
# (1=on, 0=off)
ground_info = 1

# Show passenger level of townhalls?
# (1=on, 0=off)
townhall_info = 1

# do not show the button to add an inverted schedule for rail based convois
# (1=hide, 0=show anyway)
hide_rail_return_ticket = 1

# always open only a single info window for the ground,
# even if there are more objects on this tile
#only_single_info = 1

# show a tooltip on convois at several conditions
# 0 no messages
# 1 (default) only no_route and stuck
# loading and waiting at signals too
#show_vehicle_states = 1

# show (default) tiles with a halt when editing a schedule
#visualize_schedule = 1

# Should stations get numbered names? (1=yes, 0=no)
#numbered_stations = 0

# Show name signs and statistic?
# 0 = don't show anything
# 1 = station names
# 2 = statistics
# 3 = names and statistics
# The visual style is added to this number:
#   0 = black name in color box
#   4 = name in player color with outline
#   8 = box left of name in yellow outline
show_names = 3

# Color of cursor overlay, which is blended over marked ground tiles
# The available colors and their numbers can be found on
#    http://simutrans-germany.com/wiki/wiki/tiki-index.php?page=en_FactoryDef#mapcolor
# Suggested values (155 is the default)
# -- pak64, pak.german, pak128
#cursor_overlay_color = 155
# -- pak128.japan
#cursor_overlay_color = 149

# Color of background default: COL_GREY2 (210)
#background_color = 210

# there are three different ways to indicate an active window

# first: draw a frame with titlebar color around active window
#window_frame_active = 0

# second: draw the title with a different brighness (0: dark ... 6: bright)
front_window_bar_color = 1
bottom_window_bar_color = 3

# third (best together with 2nd):use different text color for bar
# some colors are 215-white, 240-blck 208-214- all shades of gray
front_window_text_color = 215
bottom_window_text_color = 209

# when moving, you can use windows to snap onto each other seamlessly
# if you do not like it, set the catch radius to zero
window_snap_distance = 8

# show tooltips (default 1=show)
show_tooltips = 1

# tooltip background color (+-1 arounf this index is used), taken from playercolor table
tooltip_background_color = 4

# tooltip text color (240=black, 215=white)
tooltip_text_color = 240

# delay before showing tooltip in ms (default 500ms)
tooltip_delay = 500

# duration in ms during tooltip is visible (default 5000ms=5s)
tooltip_duration = 5000

# show graphs old style (right to left) or rather left to right (default)
left_to_right_graphs  = 1

# if run on a mobile device, setting hide_keyboard=1 will only show the keyboard
# when there is text to input in a dialoge. Other than that textinput will not
# be possible (no keyboard short cuts).
# Currently only supported with SDL2
hide_keyboard = 0

# 1=top, 2=vertical centre, 3=bottom, 4=left, 8=horizontal centre, 12=right
# default for minimap is 1+12=13
compass_screen_position = 0

# Should either account (default) or net wealth be shown blow the screen?
player_finance_display_account = 1

################################### Finance settings ##################################
#
# These values are usually set in the pak files
# You can adjust all the cost in the game, that are not inside some pak file
#

# Starting money of the player. Given in Credit cents (1/100 Cr)
#starting_money = 20000000

# New system of year dependent starting money. Up to ten triplets are
# possible. The entries are of the form:
# startingmoney[i]=year,money(in 1/10 credits),interpolate (1) or step(0)
# starting_money[0]=1930,20000000,1
# starting_money[1]=2030,35000000,1

# allow buying obsolete vehicles (=1) in depot
allow_buying_obsolete_vehicles = 1

# vehicle can loose a part of their value, when the are once used
# the loss is given in 1/1000th, i.e 300 mean the value will be 70%
used_vehicle_reduction = 0

# lowest possible income with speedbonus (1000=1) default 125 (=1/8th)
bonus_basefactor = 125

# if a convoi runs on a way that belongs to another player, toll may
# be charged. The number given is the percentage of the running cost
# of the convoi or the way cost (include electrification if needed).
# (default 0)
toll_runningcost_percentage = 0
toll_waycost_percentage = 0

# Maintenance costs of buildings
#maintenance_building = 2000

# first stops: the actual cost is (cost*level*width*height)
#cost_multiply_dock=500
#cost_multiply_station=600
#cost_multiply_roadstop=400
#cost_multiply_airterminal=3000
#cost_multiply_post=300
#cost_multiply_headquarter=1000

# cost for depots
#cost_depot_air=5000
#cost_depot_rail=1000
#cost_depot_road=1300
#cost_depot_ship=2500

# other construction/destruction stuff
#cost_buy_land=100
#cost_alter_land=1000
#cost_set_slope=2500
#cost_found_city=5000000
#cost_multiply_found_industry=20000
#cost_remove_tree=100
#cost_multiply_remove_haus=1000
#cost_multiply_remove_field=5000
#cost_transformer=2500
#cost_maintain_transformer=20

# in beginner mode, all good prices are multiplied by a factor (default 1500=1.5)
beginner_price_factor = 1500

################################### Miscellaneous settings ##################################
#
# also pak dependent
#

# minimum distance between two townhalls
#minimum_city_distance = 16

# Minimum distance of a city attraction to other special buildings
#special_building_distance = 3

# Max. length of initial intercity road connections
# If you want to speed up map creation, lower this value.
# If you want more initial intercity roads, raise this value.
# If the value is too large then very long bridges might be created.
# 200 seems to be a good compromise between speed and road number
# note: this will slow down map creation dramatically!
#
#intercity_road_length = 200

# This is the maximum number of tiles that a road, river or canal
# that is a public right of way may be diverted for an existing
# public right of way to be deleted. Diversion allows players to
# change the course of public rights of way to accomodate, for
# example, railways whilst protecting their integrity.

max_diversion_tiles = 16

# This is the fraction of the way's total wear capacity below which
# the way will count as degraded and be automatically renewed or,
# if the player has insufficient money or auto-renewal has been
# disabled for the way in question, will enter a degraded state
# in which the speed limit will be reduced. (At a state of 0,
# the way will become totally impassable). 
# Default: 7 (approx. 14%). 

way_degridation_fraction = 7

# These two settings determine the default relationship between
# the weight of vehicles and their way wear factors. Air and
# road vehicles use the "road_type", and all others apart from
# maglev and water (which are hard coded to zero) use the 
# "rail_type". This only applies to vehicles whose way wear
# factor is not specified in the individual vehicle definitions.
# The default for road is 4, based on the "forth power law":
# http://www.pavementinteractive.org/article/equivalent-single-axle-load/
# The default for rail is 1. 

way_wear_power_factor_road_type = 4
way_wear_power_factor_rail_type = 1

# This is the setting to calibrate the way wear system. This
# is only effective for vehicles which do not have their way
# wear factor set in their individual .dat files. For an
# explanation of the standard axle load (in tonnes), see
# the link above.
# The default is 8, which is the UK standard for road.

standard_axle_load = 8

# This is the way wear factor exerted on roads by all
# "citycars" (that is, the automatically generated
# private road traffic) in the game, measured in 
# 1/10,000ths of a standard axle load. 
# Default = 2

citycar_way_wear_factor = 2

# Type of intercity roads - must be available as PAK file.
# Intercityroad with timeline: intercity_road[number]=name,intro-year,retire-year
# .. number = 0..9 - up to ten different intercity_roads possible
# .. name = name of an existing pak file
#intercity_road[0] = asphalt_road,0,1990
# default: city_road
# (old, 102.2.2 and before) intercity_road_type = asphalt_road

# Type of city roads - must be available as PAK file.
# Cityroad with timeline: city_road[number]=name,intro-year,retire-year
# .. number = 0..9 - up to ten different city_roads possible
# .. name = name of an existing pak file
#city_road[0] = dirt_road,1920,1940
# default: asphalt_road
# (old, 102.2.2 and before) city_road_type = city_road

# now river stuff
# first river type (should be defined in pak dependent file)
# The highest number is the smallest. A river with max_speed==0 is not navigavable by ships.
#river_type[0] = river
#river_type[1] = small_river
#river_type[2] = just_the source

# river number (16 gives a few nicely branched rivers)
#river_number = 16

# min length
#river_min_length = 16

# max length
#river_max_length = 320

# This is the distance in meters at which train drivers can see signals ahead.
# Trains have to brake in time for signals which might be at danger, so this
# distance affects train speed. 
sighting_distance_meters = 250

# This is the maximum speed at which rail (including narrow gauge, monorail and maglev)
# vehicles may travel in the drive by sight working method. 0 = as fast as they can
# stop in time with no other limit. Note that this does not apply to trams.

max_speed_drive_by_sight_kmh = 35

# The following settings apply to time interval signalling only.
#
# time_interval_seconds_to_clear is the time, in seconds, after a train has completely passed a time interval
# signal that it will reset its aspect to clear.
#
# time_interval_seconds_to_caution is the time, in seconds, after a train has completely passed a time interval
# signal that it will reset its aspect to caution.
# 
# Default: clear - 600 (10 minutes); caution - 300 (5 minutes)

time_interval_seconds_to_clear = 600
time_interval_seconds_to_caution = 300

# Corners of greater than 45 degrees have their radius calculated. However, because of 
# the rigid tile system in Simutrans, this produces unrealistic results when applied
# to corners of 45 degrees. A value is thus specified here. This affects the speed
# at which vehicles can take 45 degree corners. 
#
# If this is set to 0, 45 degree corners are treated as straight.
# 
# If this is set to 9999, adjacent pairs of degree corners are treated as half the
# radius of a 90 degree corner (and non-adjacent pairs scaled according to the distance
# between them). This is techincally correct but does not work well in Simutrans because
# of the inability to have gentler corners. 
#
assumed_curve_radius_45_degrees = 1000

# Towns have speed limits. This value, expressed in km/h, is the speed limit
# value for urban roads in the game.
# Default: 50
# Set to 0 to disable town speed limits (roads will have their base speed limits in towns).
# This only applies to roads.

town_road_speed_limit = 50

# This allows for height maps with more height levels
new_height_map_conversion = 0

################################# Tree settings #################################
#  please be careful in changing them, I spent lot of time finding optimals.
#  those values have impact on no. of spawned trees -> memory consumption
#
# Number of trees on square 2 - minimal usable, 3 good, 4 very nice looking
max_no_of_trees_on_square = 3

# Base forest size - minimal size of forest - map independent
forest_base_size = 36

# Map size divisor - smaller it is the larger are individual forests
forest_map_size_divisor = 38

# Forest count divisor - smaller it is, the more forest are generated
forest_count_divisor = 16

# Determins how dense are spare trees going to be planted (works inversly)
forest_inverse_spare_tree_density = 400

# climate with trees entirely (1: water, 2:desert, 4:tropic, 8:mediterran, 16:temperate, 32:tundra, 64:rocky, 128:arctic)
# zero (default) means no climate with at least one tree per tile
tree_climates = 4

# climates with no trees at all (desert and arctic at the moment)
no_tree_climates = 130

# if set, no trees will be created at all (save about 30% memory and
# the season change will be much smoother on small machines)
#no_tree = 0

################################### Time settings ###################################

# Enforce vehicle introduction dates?
# 0 = all vehicles available from start of the game
# 1 = use introduction dates
# 2 = (default) use settings during game creation, new games off
# 3 = use settings during game creation, new games on
#
use_timeline = 3

# Starting year of the game:
# Setting it below 1850 is not recommended for 64 set!
# You will have problems with missing vehicles, do not complain if you do so!
# Setting it above 2050 will render game bit boring - no new vehicles.
#
# other recommended vaule for 64 is 1956
#
starting_year = 1930

# Starting month of the game for people who want to start in summer (default 1=January)
starting_month = 1

# Should month be shown in date?
# (0=no, 1=yes, 2>=show day in japan format=2, us format=3, german=4, japanese no season=5, us no season=6, german no season = 7, hours/minutes scale = 8)
# This is most useful, if you use longer months than the default length (see below)
# The hours/minutes scale shows the time in hours/minutes as used for determining journey times and other short times. It is the recommended setting. 
show_month = 8

# Global time multiplier (will be save with new games)
# 2^bits_per_month = duration of a game month in milliseconds real time
# default before 99.x was 18. For example, 21 will make the month 2^3=8 times longer in real time
# production and maintainance cost will be adjusted accordingly.
#
bits_per_month = 20

################################# System settings #################################

# compress savegames?
# "binary" means uncompressed, "zipped" means compressed
# "bzip2" uses another compression algorithm
# other options are "xml", "xml_zipped" and "xml_bzip2"
# xml detects more errors of broken savegames but files are much larger
# bzip2 savegames are smaller than zipped but saving/loading takes longer
saveformat = bzip2

# Alternate format for faster autosaves
autosaveformat = zipped

# autosave every x months (0=off)
autosave = 0

# display (screen/window) width
# also see readme.txt, -screensize option
#display_width  = 704

# display (screen/window) height
# also see readme.txt, -screensize option
#display_height = 560

# show full screen
fullscreen = 0

# For versions of Simutrans compiled to work in a multithreaded system (which will improve
# certain aspects of performance on multiple core/processor machines), this is the number
# of threads that will be used. Maximum: 12.
threads = 6

# maximum size of tool bars (0 = no limit)
# if more tools than allowed by height,
# next and prev arrows for scrolling appears
toolbar_max_width = 0
toolbar_max_height = 0

# How many frames per second to use? Display may look pretty until 10 or so
# (depends very much on computer, game complexity and graphics driver)
frames_per_second = 25

# during zooming out simutrans may get slow due to the very high number
# of tiles visible. If the tiles become equal or smaller than the tile size
# below, a simpler clipping algorithm will be used, which will give some
# clipping errors, but is faster. (default size = 4)
# However, during nromal gaming this will be detrimined automatically, so you
# usually you do not need to set this manually.
simple_drawing_tile_size = 4

# you can force fast redraw for fast froward by this (default off)
simple_drawing_fast_forward = 1

# How much faster should the game proceed with fast forward (limited by your computer and size of the map)
fast_forward = 100

################################### Network settings ##############################
#
# Synchronized networking is always a trade off between fast respone and safe
# connections. A more relaxed timing will cause delay of commands but is more
# likely to compensate for clients running slightly faster than the rest.
#

# Sets the local addresses Simutrans should listen on and use for making outgoing connections
# By default it will use all local IPv4 and IPv6 addresses
# This setting has no effect if Simutrans has been compiled with the USE_IP4_ONLY flag set!
# The addresses listed will be tried in the order specified
# A DNS name may be specified, this will be resolved and Simutrans will attempt to listen
# on all of the addresses returned.
#listen = ::,0.0.0.0

# How much delay before comands are executed on the clients.
# A larger number will catch even clients running slightly ahead but cause delay.
# This is set by the server side.
#
# The sum of server_frames_ahead and additional_client_frames_behind should be
# evenly divisble by server_frames_between_checks for best network performance.
server_frames_ahead = 4

# How much extra delay in command execution on the client side, on top of server_frames_ahead.
# A larger number can compensate for larger fluctuations in communication latency.
# This is set by the client side.
#
# The sum of server_frames_ahead and additional_client_frames_behind should be
# evenly divisble by server_frames_between_checks for best network performance.
#additional_client_frames_behind = 0

# In network mode, there will be a fixed number of screen updates before a step.
# Reasonable values should result in 2-5 steps per second.
#
# The sum of server_frames_ahead and additional_client_frames_behind should be
# evenly divisble by server_frames_between_checks for best network performance.
server_frames_per_step = 4

# The server sends after a fixed number of steps some information to the clients.
# Large values here means: reduced server communication (if that is of importance...)
# Small values should improve the timing of the clients.
server_frames_between_checks = 32

# Automatically announce server on the central server directory (http://servers.simutrans.org/)
# 0 (default) = off, 1 = on
#server_announce = 0

# Interval of server announcement (if enabled)
# Value is number of seconds between server announcements, default is 900 (15 minutes)
# Minimum value is 60 (1 minute), for accurate listing it is recommended not to increase
# this value to greater than 3600 (1 hour)
# To disable announcements set server_announce to 0
#server_announce_interval = 900

# Fully Qualified Domain Name (FQDN) or IP address of your server (IPv6 or IPv4)
#server_dns = 127.0.0.1

# Name of server in server listing
#server_name = My Simutrans Server

# Additional information about your server (for display on the list server)
#server_comments = Comments about my server

# Email address of server maintainer (for display on the list server)
#server_email = maintainer@your.server

# Pakset download URL (for display on the list server)
#server_pakurl = http://your.domain/pakset.zip

# Server info URL (for display on the list server)
#server_infurl = http://your.domain/server-info.html

# Pause server when no clients are connected
#pause_server_no_clients = 1

# Nickname when joining network games
#nickname = John Doe

# Server saves savegame when being killed (default=0 off)
server_save_game_on_quit = 0

# Chat window transparency (0=off, 25, 50 75 are possible)
chat_transparency = 75

# Here you can add a message about your server (It will read this file on each joining anew)
#server_motd_filename =
